{{- if .Values.components.reana_db.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "reana.prefix" . }}-db
  namespace: {{ .Release.Namespace }}
spec:
  type: NodePort
  selector:
    app: {{ include "reana.prefix" . }}-db
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "reana.prefix" . }}-db
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "reana.prefix" . }}-db
  template:
    metadata:
      labels:
        app: {{ include "reana.prefix" . }}-db
    spec:
      containers:
      - name: db
        image: bitnami/postgresql:9.6.22
        ports:
        - containerPort: 5432
        env:
        - name: TZ
          value: "Europe/Zurich"
        - name: POSTGRES_DB
          value: reana
        {{- if not .Values.debug.enabled }}
        - name: POSTGRES_USER
          value: reana
        - name: POSTGRES_PASSWORD
          value: reana
        {{- else }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "reana.prefix" . }}-db-secrets
              key: password
        {{- end }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized] || [ -f /bitnami/postgresql/.initialized]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5

        volumeMounts:
        - name: db
          mountPath: /bitnami/postgresql

      volumes:
      - name: db
        {{- if not (eq .Values.shared_storage.backend "hostpath") }}
        persistentVolumeClaim:
          claimName: {{ include "reana.prefix" . }}-db-volume
        {{- else }}
        hostPath:
          path:  {{ .Values.shared_storage.hostpath.root_path }}/db
        {{- end }}

      {{- if .Values.node_label_infrastructure }}
      {{- $full_label := split "=" .Values.node_label_infrastructure }}
      nodeSelector:
        {{ $full_label._0 }}: {{ $full_label._1 }}
      {{- end }}
{{- end }}
